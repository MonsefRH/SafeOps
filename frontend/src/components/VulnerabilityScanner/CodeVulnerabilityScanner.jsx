import React from "react";
import { toast } from "react-toastify";
import { ShieldCheckIcon, ArrowPathIcon, CodeBracketSquareIcon } from "@heroicons/react/24/outline";

const CodeVulnerabilityScanner = ({ setResult, isLoading, setIsLoading, userId, code, setCode }) => {
  const scanCode = async () => {
    if (!code.trim()) {
      toast.warn("Please enter code to scan for vulnerabilities!", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
      return;
    }

    setIsLoading(true);
    try {
      const formData = new FormData();
      formData.append('input_type', 'content');
      formData.append('content', code);
      formData.append('extension', 'py');

      const response = await fetch("http://127.0.0.1:5000/semgrep", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        body: formData,
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || "Error during code vulnerability scan");
      }

      const data = await response.json();
      setResult(data);
      toast.success("Code vulnerability scan completed successfully", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
    } catch (error) {
      toast.error(error.message || "Error during code vulnerability scan", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl">
      <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2">
        <CodeBracketSquareIcon className="h-7 w-7 text-red-400" />
        Vulnerability Scanner - Code Snippet
      </h2>
      <div className="mb-6">
        <label htmlFor="code-input" className="text-gray-500 text-sm mb-2 block">
          Code to scan:
        </label>
        <textarea
          id="code-input"
          placeholder="Paste your code here..."
          value={code}                       // use lifted state
          onChange={(e) => setCode(e.target.value)} // update lifted state
          rows={10}
          className="w-full p-4 bg-gray-700 text-gray-100 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition duration-200 placeholder-gray-400 font-mono text-sm"
        />
      </div>
      <button
        onClick={scanCode}
        disabled={isLoading || !code.trim()}
        className={`w-full sm:w-auto bg-red-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-red-700 transition-colors duration-200 flex items-center justify-center gap-2 ${
          isLoading || !code.trim() ? "opacity-50 cursor-not-allowed" : ""
        }`}
      >
        {isLoading ? (
          <>
            <ArrowPathIcon className="h-5 w-5 animate-spin" />
            Scanning...
          </>
        ) : (
          <>
            <ShieldCheckIcon className="h-5 w-5" />
            Scan Code
          </>
        )}
      </button>
    </div>
  );
};

export default CodeVulnerabilityScanner;
