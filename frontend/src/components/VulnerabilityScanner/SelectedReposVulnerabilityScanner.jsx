import React, { useState } from "react";
import { toast } from "react-toastify";
import { ShieldCheckIcon, ArrowPathIcon, ListBulletIcon } from "@heroicons/react/24/outline";

const SelectedReposVulnerabilityScanner = ({ setResult, isLoading, setIsLoading, userId }) => {
  const [selectedRepos, setSelectedRepos] = useState([]);

  const scanSelectedRepos = async () => {
    if (selectedRepos.length === 0) {
      toast.warn("Please select at least one repository to scan!", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch("http://127.0.0.1:5000/scan-selected-repos", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("token")}`,
          "X-User-ID": userId,
        },
        body: JSON.stringify({ repositories: selectedRepos }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || "Error during vulnerability scan");
      }

      const data = await response.json();
      setResult(data);
      toast.success("Vulnerability scan completed successfully", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
    } catch (error) {
      toast.error(error.message || "Error during vulnerability scan", {
        position: "top-right",
        autoClose: 3000,
        theme: "light",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl">
      <h2 className="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2">
        <ListBulletIcon className="h-7 w-7 text-red-400" />
        Vulnerability Scanner - Selected Repositories
      </h2>
      <div className="mb-6">
        <p className="text-gray-600 mb-4">
          Select repositories from your account to scan for vulnerabilities:
        </p>
        <div className="bg-gray-100 p-4 rounded-lg">
          <p className="text-gray-500 text-center">
            Repository selection interface will be implemented here
          </p>
        </div>
      </div>
      <button
        onClick={scanSelectedRepos}
        disabled={isLoading || selectedRepos.length === 0}
        className={`w-full sm:w-auto bg-red-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-red-700 transition-colors duration-200 flex items-center justify-center gap-2 ${
          isLoading || selectedRepos.length === 0 ? "opacity-50 cursor-not-allowed" : ""
        }`}
      >
        {isLoading ? (
          <>
            <ArrowPathIcon className="h-5 w-5 animate-spin" />
            Scanning...
          </>
        ) : (
          <>
            <ShieldCheckIcon className="h-5 w-5" />
            Scan Selected Repositories
          </>
        )}
      </button>
    </div>
  );
};

export default SelectedReposVulnerabilityScanner;